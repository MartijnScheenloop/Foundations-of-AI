                # for element_col in range(game_state.board.m):
                #     if game_state.board.get(element_col, j) == SudokuBoard.empty and element_col!=i:
                #         return False
                # return True
            
            # def rowFill(i,j):
            #     """Checks if the row is completed.
            #     """
            #     for element_row in range(game_state.board.n):
            #         if game_state.board.get(i, element_row) == SudokuBoard.empty and element_row!=j:
            #             return False
            #     return True

            # def regionFill(i,j)
                # x = i - (i % game_state.board.m)
                # y = j - (j % game_state.board.n)

                # for a in range(game_state.board.m):
                #     for b in range(game_state.board.n):
                #         if game_state.board.get(x+a, y+b) == SudokuBoard.empty and \
                #             (x+a !=i or y+b !=j):
                #             return False
                # return True
            
            # partsFilled = colFill(move.i, move.j) + rowFill(move.i, move.j) + regionFill(move.i, move.j)
            # partsFilled = colFill(move.i, move.j) + regionFill(move.i, move.j)
            
            # if partsFilled == 0:
            #     return int(0)
            # if partsFilled == 1:
            #     return int(1)
            # if partsFilled == 2:
            #     return int(3)
            # if partsFilled == 3:
            #     return int(7)